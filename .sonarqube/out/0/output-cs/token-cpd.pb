¿
]C:\Users\marce\ca2jmr_tothmarcell\BeadandoFeladat2021\MainPrograms\DemeritPointsCalculator.cs
	namespace 	
BeadandoFeladat2021
 
. 
MainPrograms *
{ 
public		 

class		 #
DemeritPointsCalculator		 (
{

 
private 
const 
int 

SpeedLimit $
=% &
$num' )
;) *
private 
const 
int 
MaxSpeed "
=# $
$num% (
;( )
public 
int "
CalculateDemeritPoints )
() *
int* -
speed. 3
)3 4
{ 	
if 
( 
speed 
< 
$num 
|| 
speed "
># $
MaxSpeed% -
)- .
throw 
new '
ArgumentOutOfRangeException 5
(5 6
$str6 =
)= >
;> ?
if 
( 
speed 
<= 

SpeedLimit #
)# $
return% +
$num, -
;- .
const 
int 
kmPerDemeritPoint '
=( )
$num* ,
;, -
var 
demeritPoints 
= 
(  !
speed! &
-' (

SpeedLimit) 3
)3 4
/5 6
kmPerDemeritPoint7 H
;H I
return 
demeritPoints  
;  !
} 	
} 
} è

NC:\Users\marce\ca2jmr_tothmarcell\BeadandoFeladat2021\MainPrograms\FizzBuzz.cs
	namespace 	
BeadandoFeladat2021
 
. 
MainPrograms *
{ 
public		 

class		 
FizzBuzz		 
{

 
public 
string 
	GetOutput 
(  
int  #
number$ *
)* +
{ 	
if 
( 
( 
number 
% 
$num 
== 
$num  
)  !
&&" $
(% &
number& ,
%- .
$num/ 0
==1 3
$num4 5
)5 6
)6 7
return 
$str !
;! "
if 
( 
number 
% 
$num 
== 
$num 
)  
return 
$str 
; 
if 
( 
number 
% 
$num 
== 
$num 
)  
return 
$str 
; 
return 
number 
. 
ToString "
(" #
)# $
;$ %
} 	
} 
} Ü
NC:\Users\marce\ca2jmr_tothmarcell\BeadandoFeladat2021\MainPrograms\LeapYear.cs
	namespace 	
BeadandoFeladat2021
 
. 
MainPrograms *
{ 
public		 

class		 
LeapYear		 
{

 
public 
bool 
checkLeapYear !
(" #
int# &
year' +
)+ ,
{ 	
if 
( 
( 
( 
year 
% 
$num 
== 
$num 
)  
&&! #
($ %
year% )
%* +
$num, /
!=0 2
$num3 4
)4 5
)5 6
||7 9
(: ;
year; ?
%@ A
$numB E
==F H
$numI J
)J K
)K L
return 
true 
; 
else 
return 
false 
; 
} 	
} 
} £
RC:\Users\marce\ca2jmr_tothmarcell\BeadandoFeladat2021\MainPrograms\Mathemathics.cs
	namespace 	
BeadandoFeladat2021
 
. 
MainPrograms *
{ 
public		 

class		 
Mathemathics		 
{

 
public 
int 
Add 
( 
int 
a 
, 
int !
b" #
)# $
{ 	
return 
a 
+ 
b 
; 
} 	
public 
int 
Max 
( 
int 
a 
, 
int !
b" #
)# $
{ 	
return 
( 
a 
> 
b 
) 
? 
a 
:  
b! "
;" #
} 	
public 
IEnumerable 
< 
int 
> 
GetOddNumbers  -
(- .
int. 1
limit2 7
)7 8
{ 	
for 
( 
var 
i 
= 
$num 
; 
i 
<=  
limit! &
;& '
i( )
++) +
)+ ,
if 
( 
i 
% 
$num 
!= 
$num 
) 
yield 
return  
i! "
;" #
} 	
} 
} √(
SC:\Users\marce\ca2jmr_tothmarcell\BeadandoFeladat2021\MainPrograms\NumberToWords.cs
	namespace 	
BeadandoFeladat2021
 
. 
MainPrograms *
{ 
public		 

static		 
class		 
NumberToWords		 %
{

 
public 
static 
string 
convertNumbers +
(, -
int- 0
number1 7
)7 8
{ 	
if 
( 
number 
== 
$num 
) 
return 
$str 
; 
if 
( 
number 
< 
$num 
) 
return 
$str 
+  !
convertNumbers" 0
(0 1
Math1 5
.5 6
Abs6 9
(9 :
number: @
)@ A
)A B
;B C
string 
words 
= 
$str 
; 
if 
( 
( 
number 
/ 
$num !
)! "
># $
$num% &
)& '
{ 
words 
+= 
convertNumbers '
(' (
number( .
// 0
$num1 8
)8 9
+: ;
$str< F
;F G
number 
%= 
$num !
;! "
} 
if 
( 
( 
number 
/ 
$num 
) 
>  !
$num" #
)# $
{ 
if 
( 
words 
!= 
$str 
)  
words 
+= 
$str !
;! "
words   
+=   
convertNumbers   &
(  & '
number  ' -
/  . /
$num  0 4
)  4 5
+  6 7
$str  8 C
;  C D
number!! 
%=!! 
$num!! 
;!! 
}"" 
if$$ 
($$ 
($$ 
number$$ 
/$$ 
$num$$ 
)$$ 
>$$  
$num$$! "
)$$" #
{%% 
if&& 
(&& 
words&& 
!=&& 
$str&& 
)&&  
words'' 
+='' 
$str'' $
;''$ %
words)) 
+=)) 
convertNumbers)) '
())' (
number))( .
/))/ 0
$num))1 4
)))4 5
+))6 7
$str))8 B
;))B C
number** 
%=** 
$num** 
;** 
}++ 
if-- 
(-- 
number-- 
>-- 
$num-- 
)-- 
{.. 
if// 
(// 
words// 
!=// 
$str// 
)//  
words00 
+=00 
$str00 $
;00$ %
var22 
unitsMap22 
=22 
new22 "
[22" #
]22# $
{22% &
$str22' -
,22- .
$str22/ 4
,224 5
$str226 ;
,22; <
$str22= D
,22D E
$str22F L
,22L M
$str22N T
,22T U
$str22V [
,22[ \
$str22] d
,22d e
$str22f m
,22m n
$str22o u
,22u v
$str22w |
,22| }
$str	22~ Ü
,
22Ü á
$str
22à ê
,
22ê ë
$str
22í ú
,
22ú ù
$str
22û ®
,
22® ©
$str
22™ ≥
,
22≥ ¥
$str
22µ æ
,
22æ ø
$str
22¿ À
,
22À Ã
$str
22Õ ◊
,
22◊ ÿ
$str
22Ÿ „
}
22‰ Â
;
22Â Ê
var33 
tensMap33 
=33 
new33 !
[33! "
]33" #
{33$ %
$str33& ,
,33, -
$str33. 3
,333 4
$str335 =
,33= >
$str33? G
,33G H
$str33I P
,33P Q
$str33R Y
,33Y Z
$str33[ b
,33b c
$str33d m
,33m n
$str33o w
,33w x
$str	33y Å
}
33Ç É
;
33É Ñ
if55 
(55 
number55 
<55 
$num55 
)55  
words66 
+=66 
unitsMap66 %
[66% &
number66& ,
]66, -
;66- .
else77 
{88 
words99 
+=99 
tensMap99 $
[99$ %
number99% +
/99, -
$num99. 0
]990 1
;991 2
if:: 
(:: 
(:: 
number:: 
%::  !
$num::" $
)::$ %
>::& '
$num::( )
)::) *
words;; 
+=;;  
$str;;! $
+;;% &
unitsMap;;' /
[;;/ 0
number;;0 6
%;;7 8
$num;;9 ;
];;; <
;;;< =
}<< 
}== 
return?? 
words?? 
;?? 
}@@ 	
}AA 
}BB §
@C:\Users\marce\ca2jmr_tothmarcell\BeadandoFeladat2021\Program.cs
	namespace 	
BeadandoFeladat2021
 
{ 
static		 

class		 
Program		 
{

 
static 
void 
Main 
( 
string 
[  
]  !
args" &
)& '
{ 	
} 	
} 
} ˚
PC:\Users\marce\ca2jmr_tothmarcell\BeadandoFeladat2021\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str .
). /
]/ 0
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *